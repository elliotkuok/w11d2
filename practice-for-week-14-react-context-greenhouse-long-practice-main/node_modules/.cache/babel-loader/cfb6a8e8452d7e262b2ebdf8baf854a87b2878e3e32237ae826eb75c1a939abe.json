{"ast":null,"code":"var _jsxFileName = \"/Users/Elliot/Development/App_Academy/AAClasswork/W11D2/practice-for-week-14-react-context-greenhouse-long-practice-main/src/components/Thermometer/Thermometer.js\",\n  _s = $RefreshSig$();\nimport { useClimate } from \"../../context/ClimateContext\";\nimport { useEffect, useState } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport './Thermometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Thermometer() {\n  _s();\n  const {\n    temperature,\n    setTemperature\n  } = useClimate();\n  const {\n    goalTemperature,\n    setGoalTemperature\n  } = useState(temperature);\n  useEffect(() => {});\n  const timerId = setTimeout(() => {});\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thermometer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actual-temp\",\n      children: [\"Actual Temperature: \", temperature, \"\\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      value: temperature,\n      onAfterChange: val => {\n        setTemperature(val);\n      },\n      className: \"thermometer-slider\",\n      thumbClassName: \"thermometer-thumb\",\n      trackClassName: \"thermometer-track\",\n      ariaLabel: \"Thermometer\",\n      orientation: \"vertical\",\n      min: 0,\n      max: 120,\n      renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        children: state.valueNow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 40\n      }, this),\n      renderTrack: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        index: state.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this),\n      invert: true,\n      pearling: true,\n      minDistance: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Thermometer, \"9sWRnrxvt+AZVci1Dzi/x/Alc9w=\", false, function () {\n  return [useClimate];\n});\n_c = Thermometer;\nexport default Thermometer;\nvar _c;\n$RefreshReg$(_c, \"Thermometer\");","map":{"version":3,"names":["useClimate","useEffect","useState","ReactSlider","Thermometer","temperature","setTemperature","goalTemperature","setGoalTemperature","timerId","setTimeout","val","props","state","valueNow","index"],"sources":["/Users/Elliot/Development/App_Academy/AAClasswork/W11D2/practice-for-week-14-react-context-greenhouse-long-practice-main/src/components/Thermometer/Thermometer.js"],"sourcesContent":["import { useClimate } from \"../../context/ClimateContext\";\nimport { useEffect, useState } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport './Thermometer.css';\n\nfunction Thermometer() {\n  const { temperature, setTemperature } = useClimate();\n  const { goalTemperature, setGoalTemperature} = useState(temperature)\n\n  useEffect(() => {\n    \n  })\n  const timerId = setTimeout(()=> {\n    \n  })\n\n  return (\n    <section>\n      <h2>Thermometer</h2>\n      <div className=\"actual-temp\">Actual Temperature: {temperature}Â°F</div>\n      <ReactSlider\n        value={temperature}\n        onAfterChange={(val) => {setTemperature(val)}}\n        className=\"thermometer-slider\"\n        thumbClassName=\"thermometer-thumb\"\n        trackClassName=\"thermometer-track\"\n        ariaLabel={\"Thermometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={120}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Thermometer;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,8BAA8B;AACzD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,mBAAmB;AAAC;AAE3B,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGN,UAAU,EAAE;EACpD,MAAM;IAAEO,eAAe;IAAEC;EAAkB,CAAC,GAAGN,QAAQ,CAACG,WAAW,CAAC;EAEpEJ,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EACF,MAAMQ,OAAO,GAAGC,UAAU,CAAC,MAAK,CAEhC,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAK,SAAS,EAAC,aAAa;MAAA,WAAC,sBAAoB,EAACL,WAAW,EAAC,OAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACtE,QAAC,WAAW;MACV,KAAK,EAAEA,WAAY;MACnB,aAAa,EAAGM,GAAG,IAAK;QAACL,cAAc,CAACK,GAAG,CAAC;MAAA,CAAE;MAC9C,SAAS,EAAC,oBAAoB;MAC9B,cAAc,EAAC,mBAAmB;MAClC,cAAc,EAAC,mBAAmB;MAClC,SAAS,EAAE,aAAc;MACzB,WAAW,EAAC,UAAU;MACtB,GAAG,EAAE,CAAE;MACP,GAAG,EAAE,GAAI;MACT,WAAW,EAAE,CAACC,KAAK,EAAEC,KAAK,kBAAK;QAAA,GAASD,KAAK;QAAA,UAAGC,KAAK,CAACC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ;MACtE,WAAW,EAAE,CAACF,KAAK,EAAEC,KAAK,kBACxB;QAAA,GAASD,KAAK;QAAE,KAAK,EAAEC,KAAK,CAACE;MAAM;QAAA;QAAA;QAAA;MAAA,QACnC;MACF,MAAM;MACN,QAAQ;MACR,WAAW,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAEd;AAAC,GAnCQX,WAAW;EAAA,QACsBJ,UAAU;AAAA;AAAA,KAD3CI,WAAW;AAqCpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}